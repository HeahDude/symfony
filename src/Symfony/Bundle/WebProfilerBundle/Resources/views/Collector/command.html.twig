{% extends '@WebProfiler/Profiler/layout.html.twig' %}

{% block menu %}
    <span class="label">
{#        <span class="icon">{{ source('@WebProfiler/Icon/request.svg') }}</span>#}
        <span class="icon">{{ '</>'|e }}</span>
        <strong>Cli / Command</strong>
    </span>
{% endblock %}

{% block panel %}
    <h2>
        {{ profiler_dump(collector.command) }}
    </h2>

    <div class="sf-tabs">
        <div class="tab">
            <h3 class="tab-title">Command</h3>

            <div class="tab-content">
                <div class="metrics">
                    <div class="metric">
                        <span class="value">{{ collector.duration }}</span>
                        <span class="label">Duration</span>
                    </div>

                    <div class="metric">
                        <span class="value">{{ collector.memoryUsage }}</span>
                        <span class="label">Memory Usage</span>
                    </div>

                    <div class="metric">
                        <span class="value">{{ collector.verbosityLevel }}</span>
                        <span class="label">Verbosity Level</span>
                    </div>
                </div>

                <div class="metrics">
                    <div class="metric">
                        <span class="value">{{ source('@WebProfiler/Icon/' ~ (collector.interactive ? 'yes' : 'no') ~ '.svg') }}</span>
                        <span class="label">Interactive</span>
                    </div>

                    <div class="metric">
                        <span class="value">{{ source('@WebProfiler/Icon/' ~ (collector.validateInput ? 'yes' : 'no') ~ '.svg') }}</span>
                        <span class="label">Validate Input</span>
                    </div>

                    <div class="metric">
                        <span class="value">{{ source('@WebProfiler/Icon/' ~ (collector.enabled ? 'yes' : 'no') ~ '.svg') }}</span>
                        <span class="label">Enabled</span>
                    </div>

                    <div class="metric">
                        <span class="value">{{ source('@WebProfiler/Icon/' ~ (collector.visible ? 'yes' : 'no') ~ '.svg') }}</span>
                        <span class="label">Visible</span>
                    </div>
                </div>

                <h3>Arguments</h3>

                {% if collector.arguments is empty %}
                    <div class="empty">
                        <p>No arguments were set</p>
                    </div>
                {% else %}
                    {% include '@WebProfiler/Profiler/table.html.twig' with { data: collector.arguments, labels: ['Argument', 'Value'], maxDepth: 2 } only %}
                {% endif %}

                <h3>Options</h3>

                {% if collector.options is empty %}
                    <div class="empty">
                        <p>No options were set</p>
                    </div>
                {% else %}
                    {% include '@WebProfiler/Profiler/table.html.twig' with { data: collector.options, labels: ['Option', 'Value'], maxDepth: 2 } only %}
                {% endif %}

                <h3>Interactive Inputs</h3>

                <p class="help">
                    The values which have been interactively input.
                </p>

                {% if collector.interactiveInputs is empty %}
                    <div class="empty">
                        <p>No inputs were set</p>
                    </div>
                {% else %}
                    {% include '@WebProfiler/Profiler/table.html.twig' with { data: collector.interactiveInputs, labels: ['Input', 'Value'], maxDepth: 2 } only %}
                {% endif %}
            </div>
        </div>

        <div class="tab">
            <h3 class="tab-title">Input / Output</h3>

            <div class="tab-content">
                <table>
                    <tr>
                        <td class="font-normal">Input</td>
                        <td class="font-normal">{{ profiler_dump(collector.input) }}</td>
                    </tr>
                    <tr>
                        <td class="font-normal">Output</td>
                        <td class="font-normal">{{ profiler_dump(collector.output) }}</td>
                    </tr>
                </table>
            </div>
        </div>

        <div class="tab">
            <h3 class="tab-title">Helper Set</h3>

            <div class="tab-content">
                {% if collector.helperSet is empty %}
                    <div class="empty">
                        <p>No helpers</p>
                    </div>
                {% else %}
                    <table class="{{ class|default('') }}">
                        <thead>
                        <tr>
                            <th scope="col">Helpers</th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for helper in collector.helperSet|sort %}
                            <tr>
                                <td>{{ profiler_dump(helper) }}</td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                {% endif %}
            </div>
        </div>

        <div class="tab">
            <h3 class="tab-title">Server Parameters</h3>
            <div class="tab-content">
                <h3>Server Parameters</h3>
                <h4>Defined in .env</h4>
                {% set dotenvvars = profile.collectors.request.dotenvvars|default([]) %}
                {% include '@WebProfiler/Profiler/bag.html.twig' with { bag: dotenvvars } only %}

                <h4>Defined as regular env variables</h4>
                {% set server = [] %}
                {% for key, value in collector.server|filter((_, key) => key not in dotenvvars.keys) %}
                    {% set server = server|merge({(key): value}) %}
                {% endfor %}
                {% include '@WebProfiler/Profiler/table.html.twig' with { data: server } only %}
            </div>
        </div>
    </div>
{% endblock %}
